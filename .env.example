# ============================================================================
# BuiltEnvironment.ai - Environment Variables Template
# ============================================================================
# Copy this file to .env and fill in your actual values
# NEVER commit .env to Git (it's in .gitignore)
# ============================================================================

# ============================================================================
# ENVIRONMENT
# ============================================================================
ENVIRONMENT=development  # development, staging, production
DEBUG=true
NODE_ENV=development

# ============================================================================
# DATABASE - PostgreSQL with TimescaleDB
# ============================================================================
POSTGRES_USER=postgres
POSTGRES_PASSWORD=changeme123  # CHANGE THIS IN PRODUCTION!
POSTGRES_DB=builtenvironment
POSTGRES_PORT=5432
DATABASE_URL=postgresql+asyncpg://postgres:changeme123@postgres:5432/builtenvironment

# ============================================================================
# REDIS - Caching and Session Storage
# ============================================================================
REDIS_PASSWORD=changeme123  # CHANGE THIS IN PRODUCTION!
REDIS_PORT=6379
REDIS_URL=redis://:changeme123@redis:6379/0

# ============================================================================
# CHROMADB - Vector Database for RAG
# ============================================================================
CHROMA_HOST=chromadb
CHROMA_PORT=8000
CHROMA_TELEMETRY=FALSE
CHROMA_ALLOW_RESET=TRUE  # Set to FALSE in production

# ============================================================================
# LANGFLOW - AI Workflow Orchestration
# ============================================================================
LANGFLOW_URL=http://langflow:7860
LANGFLOW_PORT=7860
LANGFLOW_AUTO_LOGIN=false
LANGFLOW_SUPERUSER=admin@builtenvironment.ai
LANGFLOW_SUPERUSER_PASSWORD=changeme123  # CHANGE THIS IN PRODUCTION!
LANGFLOW_API_KEY=  # Generate in Langflow UI after first login

# ============================================================================
# AI SERVICES - API Keys
# ============================================================================
# Anthropic Claude API (required)
ANTHROPIC_API_KEY=sk-ant-xxxxx  # Get from https://console.anthropic.com/

# OpenAI API (required for embeddings)
OPENAI_API_KEY=sk-xxxxx  # Get from https://platform.openai.com/

# ============================================================================
# STRIPE - Payment Processing
# ============================================================================
# Get from https://dashboard.stripe.com/apikeys
STRIPE_SECRET_KEY=sk_test_xxxxx  # Use sk_test_ for testing, sk_live_ for production
STRIPE_PUBLISHABLE_KEY=pk_test_xxxxx
STRIPE_WEBHOOK_SECRET=whsec_xxxxx  # Get from Stripe webhook configuration

# ============================================================================
# JWT - Authentication
# ============================================================================
# Generate a secure key with: python -c "import secrets; print(secrets.token_urlsafe(32))"
SECRET_KEY=dev-secret-key-change-in-production-must-be-32-chars-minimum
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7

# ============================================================================
# CORS - Cross-Origin Resource Sharing
# ============================================================================
# Comma-separated list of allowed origins
CORS_ORIGINS=http://localhost:3000,http://localhost:5173,http://localhost:8001

# ============================================================================
# FILE UPLOADS
# ============================================================================
UPLOAD_DIR=/app/uploads
MAX_UPLOAD_SIZE=104857600  # 100MB in bytes

# ============================================================================
# EMAIL (Optional - for user notifications)
# ============================================================================
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASSWORD=your-app-password
SMTP_FROM=noreply@builtenvironment.ai

# ============================================================================
# APPLICATION PORTS
# ============================================================================
BACKEND_PORT=8001
FRONTEND_PORT=3000
POSTGRES_PORT=5432
REDIS_PORT=6379
CHROMA_PORT=8000
LANGFLOW_PORT=7860

# ============================================================================
# DOCKER BUILD
# ============================================================================
BUILD_TARGET=development  # development or production

# ============================================================================
# FRONTEND (React/Vite)
# ============================================================================
VITE_API_URL=http://localhost:8001
VITE_STRIPE_PUBLISHABLE_KEY=pk_test_xxxxx

# ============================================================================
# DOKPLOY DEPLOYMENT (Production)
# ============================================================================
# When deploying to Dokploy, set these in the Dokploy UI:
# 1. DATABASE_URL - Use Dokploy's PostgreSQL service or external DB
# 2. REDIS_URL - Use Dokploy's Redis service or external Redis
# 3. All API keys (ANTHROPIC_API_KEY, OPENAI_API_KEY, STRIPE_SECRET_KEY)
# 4. SECRET_KEY - Generate a strong random key
# 5. CORS_ORIGINS - Your production domain(s)
# 6. ENVIRONMENT=production
# 7. DEBUG=false

# ============================================================================
# SECURITY NOTES
# ============================================================================
# 1. NEVER commit .env to Git
# 2. Use different passwords/keys for development vs production
# 3. Rotate credentials regularly in production
# 4. Use Dokploy's secrets management for production
# 5. Enable 2FA on all service accounts (Stripe, Anthropic, OpenAI)

# ============================================================================
# QUICK START
# ============================================================================
# 1. Copy this file: cp .env.example .env
# 2. Replace all xxxxx with your actual API keys
# 3. Change all passwords from "changeme123" to secure passwords
# 4. Generate a new SECRET_KEY with:
#    python -c "import secrets; print(secrets.token_urlsafe(32))"
# 5. Start services: docker-compose up -d
# 6. Check logs: docker-compose logs -f backend
